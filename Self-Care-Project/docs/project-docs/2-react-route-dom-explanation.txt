1. 구체적인 설정
1-1. 루트 파일인 app.tsx에서 createBrowserRouter를 호출하여 각 page 주소와 컴포넌트를 초기화
1-2. 애플리케이션에 router를 알리기 위해서 RouterProvider 컴포넌트를 가져온다.
1-3. createBrowserRouter의 반환값을 RouterProvider의 router의 속성값으로 채운다.
=> 기초적인 설정은 완료


2. createBrowserRouter의 범용 처리
2-1. 같은 layout 처리를 위해서 path : '/' element에 <Layout> 컴포넌트를 생성
2-2. Layout 컴포넌트에서 Outlet 컴포넌트를 호출하여 자식들을 렌더링

2-3. Error 컴포넌트를 생성하고 루트 부모에게 errorElement의 값으로 전달
=> 404 or 범용 통신 에러 처리


3. Pages 폴더를 생성하고 주소에 따라 체계화
=> Pages를 구조화하여 components에 이양


4. Navigation
=> <Link> 컴포넌트를 통해 내비게이션 구현
=> 언제나 상단에 위치해야 함으로 Layout에 구현
